name: Build and Deploy NuGet Package
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [closed]
    branches:
        - main
        - develop
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Update NuGet Package
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          5.0.x
          6.0.x
    - name: Determine changed projects
      run: |
        CHANGED_FILES=$(git --no-pager diff --relative=src/ --name-only HEAD $(git merge-base HEAD ${{ github.base_ref }}))
        if [[ -z "$CHANGED_FILES" ]]; then
          echo "No changes detected. Skipping build."
          exit 0
        fi
        echo "Changes detected. Continuing build."
        PROJECTS=$(echo $CHANGED_FILES | grep -o -E '.+\.csproj$' | tr '\n' ';')
        echo "::set-env name=PROJECTS::$PROJECTS"
        echo $PROJECTS
    - name: Restore dependencies
      run: |
        dotnet restore --source "https://api.nuget.org/v3/index.json" --no-cache
        if ! nuget sources list | grep -q "nuget.org"; then
          nuget sources add -name "nuget.org" -source "https://api.nuget.org/v3/index.json" -username ${{ secrets.NUGET_PUBLISH_USERNAME }} -password ${{ secrets.NUGET_PUBLISH_API_KEY }}
        fi
      shell: bash
    - name: Build and package
      run: |
        dotnet build --configuration Release --no-restore --source https://api.nuget.org/v3/index.json --verbosity minimal ${{ env.PROJECTS }}
        if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
          dotnet pack --configuration Release --no-restore --no-build --output ./bin/Release --version-suffix "alpha-${{ github.sha }}" ${{ env.PROJECTS }}
        else
          dotnet pack --configuration Release --no-restore --no-build --output ./bin/Release ${{ env.PROJECTS }}
        fi
    - name: Publish package to nuget.org
      run: |
        for PACKAGE in $(ls ./bin/Release/*.nupkg); do
          dotnet nuget push $PACKAGE -s "https://api.nuget.org/v3/index.json" -k ${{ secrets.NUGET_PUBLISH_API_KEY }}
        done
